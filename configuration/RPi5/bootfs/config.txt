# For more options and information see
# http://rptl.io/configtxt
# Some settings may impact device functionality. See link above for details

# Uncomment some or all of these to enable the optional hardware interfaces
#dtparam=i2c_arm=on
#dtparam=i2s=on
#dtparam=spi=on

# Enable audio (loads snd_bcm2835)
dtparam=audio=on

# Additional overlays and parameters are documented
# /boot/firmware/overlays/README

# Automatically load overlays for detected cameras
camera_auto_detect=0

# Automatically load overlays for detected DSI displays
display_auto_detect=1

# Automatically load initramfs files, if found
auto_initramfs=1

# Enable DRM VC4 V3D driver
dtoverlay=vc4-kms-v3d
max_framebuffers=2

# Don't have the firmware create an initial video= setting in cmdline.txt.
# Use the kernel's default instead.
disable_fw_kms_setup=1

# Run in 64-bit mode
arm_64bit=1

# Disable compensation for displays with overscan
disable_overscan=1

# Run as fast as firmware / board allows
arm_boost=1


# enable_uart=1 (in conjunction with console=serial0,115200 in cmdline.txt) requests that the 
# kernel creates a serial console, accessible using GPIOs 14 and 15 (pins 8 and 10 on the 40-pin header). 
# Editing cmdline.txt to remove the line quiet enables boot messages from the kernel to also appear there.
# Setting enable_uart=0 disables ttyAMA0! (not ttyAMA10)
enable_uart=0
# I think this is a special debug UART unique to RPi5 -> /dev/ttyAMA10
# I think this debug UART is not on the GPIO but rather on a dedicated 3 pin header on the RPi5 (between HDMI ports)
# I am not sure if this UART is the same as UART0 accessible on the GPIO header
# this may map to /dev/serial0 if it is the FIRST uart enabled (before dtoverlay=uartX below) NOPE!

# If uart_2ndstage is 1 then enable debug logging to the UART. This option also automatically enables UART logging 
# in start.elf. This is also described on the Boot options page.
# The BOOT_UART property also enables bootloader UART logging but does not enable UART logging in start.elf 
# unless uart_2ndstage=1 is also set.
#uart_2ndstage=0


[cm4]
# Enable host mode on the 2711 built-in XHCI USB controller.
# This line should be removed if the legacy DWC2 controller is required
# (e.g. for USB device mode) or if USB support is not required.
otg_mode=1

#[cm5]
[pi5]
dtoverlay=dwc2,dr_mode=host

# Enable PCIe
dtparam=pciex1
#dtparam=pciex1_gen=2

# DEBUG UART
# /dev/ttyAMA10
# so far always enabled (maybe only disabled when UART0 is used as debug uart)

# UART 0 
# GPIO 14,15 (TX,RX) by default, but can be changed via overlay param
# /dev/ttyAMA0 (or ttyAMA10 if enable_uart=0 !)
# the first serial port will be aliased to /dev/serial0 (it may be the debug port if enabled /dev/ttyAMA10)
# commenting this out, or setting uart0=off does NOT disable uart0 (ttyAMA0 is always created)
# only enable_uart=0 disables ttyAMA0
#dtoverlay=uart0
#dtparam=uart0=on
# make it the debug uart (instead of the dedicated debug uart connector between the HDMI ports)
# set BOOT_UART=1 in EEPROM/flash
# set uart_2ndstage=1 in config.txt
# even with all this configured, you can only ever get EEPROM output from the dedicated 3-pin JST debug uart
#dtparam=uart0_console

# UART 1
# GPIO 0,1
#dtoverlay=uart1-pi5
#dtparam=uart1=on

# Bluetooth
# has a dedicated UART on RPi5
# does not seem to disable any UARTs (such as ttyS0)
#dtoverlay=disable-bt
# also disable systemd service 'hciuart'

# UART 2 
# GPIO 4,5
dtoverlay=uart2-pi5
dtparam=uart2=on

# UART 3
# GPIO 8,9
dtoverlay=uart3-pi5
dtparam=uart3=on

# UART 4
# GPIO 12,13


# When set to 1, firmware initialises RP1 UART0 to 115200bps and doesnâ€™t reset RP1 before starting the OS 
# (separately configurable using pciex4_reset=1). This makes it easier to get UART output on the 40-pin header 
# in early boot-code, for instance during bare-metal debug.
#enable_rp1_uart=0x0

# By default, the PCIe x4 controller used by RP1 is reset before starting the operating system. If this parameter 
# is set to 0 then the reset is disabled allowing operating system or bare metal code to inherit the PCIe 
# configuration setup from the bootloader.
#pciex4_reset=1

[all]

# Necessary if you have a power supply that can supply 5A, but it is not USB-PD capable (so the RPi cannot query it)
usb_max_current_enable=1

# Power off button
# attach to GND + GPIO16
# GPIO is pulled up, pressing the button connects to ground (falling edge=active low)
dtoverlay=gpio-shutdown,gpio_pin=16,gpio_pull=up,active_low=1,debounce=100




